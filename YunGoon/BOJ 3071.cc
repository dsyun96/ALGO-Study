#include <cstdio>
using ll = long long;

ll f[21]{ 1 };
char ans[25];
int idx;

void jin(int n, int len) {
	if (n / 3 || len > 1) jin(n / 3, len - 1);
	ans[idx++] = n % 3 == 0 ? '-' : n % 3 + 47;
}
int main() {
	int t;
	scanf("%d", &t);

	for (int i = 1; i < 21; ++i) f[i] = f[i - 1] * 3;
	for (int i = 1; i < 21; ++i) f[i] += f[i - 1];

	int n, len;
	while (t--) {
		scanf("%d", &n);

		if (n == 0) {
			puts("0");
			continue;
		}

		int sign = n > 0;
		n = n < 0 ? -n : n;

		for (len = 0; f[len] < n; ++len);

		idx = 0;
		ans[idx++] = 49;
		if (len > 0) jin(n - f[len - 1] - 1, len);
		ans[idx] = 0;

		if (!sign) {
			for (int i = 0; i < idx; ++i)
				ans[i] = ans[i] == '-' ? '1' : ans[i] == '1' ? '-' : '0';
		}
		puts(ans);
	}

	return 0;
}

/*
몇 개를 나열해 보고 규칙을 찾는다.
가령 10의 경우 10보다 작은 f들 중 (f에는 1로만 이루어진 3진수들이 있다)
가장 큰 4를 찾고 1을 더하여 빼주면 5가 나온다. 5는 3진수로 12 이므로
각 자리수에서 1을 빼주면 01이 되므로, 1에 01을 붙여주면 된다.
음수의 경우는 양수에서 반전만 시켜주면 된다.

	-111	-14
===================
	---	-13
	--0	-12
	--1	-11
	-0-	-10
	-00	-9
	-01	-8
	-1-	-7
	-10	-6
	-11	-5
===================
	--	-4
	-0	-3
	-1	-2
===================
	-	-1
0	0	0
1	1	1
===================
2	1-	2
10	10	3
11	11	4
===================
12	1--	5
20	1-0	6
21	1-1	7
22	10-	8
100	100	9
101	101	10
102	11-	11
110	110	12
111	111	13
===================
112	1---	14
120	1--0	15
121	1--1	16
122	1-0-	17
200	1-00	18
201	1-01	19
202	1-1-	20
210	1-10	21
211	1-11	22
212	10--	23
220	10-0	24
221	10-1	25
222	100-	26
1000	1000	27
1001	1001	28
1002	101-	29
1010	1010	30
1011	1011	31
1012	11--	32
1020	11-0	33
1021	11-1	34
1022	110-	35
1100	1100	36
1101	1101	37
1102	111-	38
1110	1110	39
1111	1111	40
*/
